/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetUniverseStarsStarIdOk : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetUniverseStarsStarIdOk {
  /// Age of star in years
  #[serde(rename = "age")]
  age: i64,
  /// luminosity number
  #[serde(rename = "luminosity")]
  luminosity: f32,
  /// name string
  #[serde(rename = "name")]
  name: String,
  /// radius integer
  #[serde(rename = "radius")]
  radius: i64,
  /// solar_system_id integer
  #[serde(rename = "solar_system_id")]
  solar_system_id: i32,
  /// spectral_class string
  #[serde(rename = "spectral_class")]
  spectral_class: String,
  /// temperature integer
  #[serde(rename = "temperature")]
  temperature: i32,
  /// type_id integer
  #[serde(rename = "type_id")]
  type_id: i32
}

impl GetUniverseStarsStarIdOk {
  /// 200 ok object
  pub fn new(age: i64, luminosity: f32, name: String, radius: i64, solar_system_id: i32, spectral_class: String, temperature: i32, type_id: i32) -> GetUniverseStarsStarIdOk {
    GetUniverseStarsStarIdOk {
      age: age,
      luminosity: luminosity,
      name: name,
      radius: radius,
      solar_system_id: solar_system_id,
      spectral_class: spectral_class,
      temperature: temperature,
      type_id: type_id
    }
  }

  pub fn set_age(&mut self, age: i64) {
    self.age = age;
  }

  pub fn with_age(mut self, age: i64) -> GetUniverseStarsStarIdOk {
    self.age = age;
    self
  }

  pub fn age(&self) -> &i64 {
    &self.age
  }


  pub fn set_luminosity(&mut self, luminosity: f32) {
    self.luminosity = luminosity;
  }

  pub fn with_luminosity(mut self, luminosity: f32) -> GetUniverseStarsStarIdOk {
    self.luminosity = luminosity;
    self
  }

  pub fn luminosity(&self) -> &f32 {
    &self.luminosity
  }


  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> GetUniverseStarsStarIdOk {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_radius(&mut self, radius: i64) {
    self.radius = radius;
  }

  pub fn with_radius(mut self, radius: i64) -> GetUniverseStarsStarIdOk {
    self.radius = radius;
    self
  }

  pub fn radius(&self) -> &i64 {
    &self.radius
  }


  pub fn set_solar_system_id(&mut self, solar_system_id: i32) {
    self.solar_system_id = solar_system_id;
  }

  pub fn with_solar_system_id(mut self, solar_system_id: i32) -> GetUniverseStarsStarIdOk {
    self.solar_system_id = solar_system_id;
    self
  }

  pub fn solar_system_id(&self) -> &i32 {
    &self.solar_system_id
  }


  pub fn set_spectral_class(&mut self, spectral_class: String) {
    self.spectral_class = spectral_class;
  }

  pub fn with_spectral_class(mut self, spectral_class: String) -> GetUniverseStarsStarIdOk {
    self.spectral_class = spectral_class;
    self
  }

  pub fn spectral_class(&self) -> &String {
    &self.spectral_class
  }


  pub fn set_temperature(&mut self, temperature: i32) {
    self.temperature = temperature;
  }

  pub fn with_temperature(mut self, temperature: i32) -> GetUniverseStarsStarIdOk {
    self.temperature = temperature;
    self
  }

  pub fn temperature(&self) -> &i32 {
    &self.temperature
  }


  pub fn set_type_id(&mut self, type_id: i32) {
    self.type_id = type_id;
  }

  pub fn with_type_id(mut self, type_id: i32) -> GetUniverseStarsStarIdOk {
    self.type_id = type_id;
    self
  }

  pub fn type_id(&self) -> &i32 {
    &self.type_id
  }


}



