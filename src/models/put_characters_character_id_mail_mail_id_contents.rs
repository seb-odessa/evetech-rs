/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// PutCharactersCharacterIdMailMailIdContents : contents object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PutCharactersCharacterIdMailMailIdContents {
  /// Labels to assign to the mail. Pre-existing labels are unassigned.
  #[serde(rename = "labels")]
  labels: Option<Vec<i32>>,
  /// Whether the mail is flagged as read
  #[serde(rename = "read")]
  read: Option<bool>
}

impl PutCharactersCharacterIdMailMailIdContents {
  /// contents object
  pub fn new() -> PutCharactersCharacterIdMailMailIdContents {
    PutCharactersCharacterIdMailMailIdContents {
      labels: None,
      read: None
    }
  }

  pub fn set_labels(&mut self, labels: Vec<i32>) {
    self.labels = Some(labels);
  }

  pub fn with_labels(mut self, labels: Vec<i32>) -> PutCharactersCharacterIdMailMailIdContents {
    self.labels = Some(labels);
    self
  }

  pub fn labels(&self) -> Option<&Vec<i32>> {
    self.labels.as_ref()
  }

  pub fn reset_labels(&mut self) {
    self.labels = None;
  }

  pub fn set_read(&mut self, read: bool) {
    self.read = Some(read);
  }

  pub fn with_read(mut self, read: bool) -> PutCharactersCharacterIdMailMailIdContents {
    self.read = Some(read);
    self
  }

  pub fn read(&self) -> Option<&bool> {
    self.read.as_ref()
  }

  pub fn reset_read(&mut self) {
    self.read = None;
  }

}



