/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCharactersCharacterIdClonesHomeLocation : home_location object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCharactersCharacterIdClonesHomeLocation {
  /// location_id integer
  #[serde(rename = "location_id")]
  location_id: Option<i64>,
  /// location_type string
  #[serde(rename = "location_type")]
  location_type: Option<String>
}

impl GetCharactersCharacterIdClonesHomeLocation {
  /// home_location object
  pub fn new() -> GetCharactersCharacterIdClonesHomeLocation {
    GetCharactersCharacterIdClonesHomeLocation {
      location_id: None,
      location_type: None
    }
  }

  pub fn set_location_id(&mut self, location_id: i64) {
    self.location_id = Some(location_id);
  }

  pub fn with_location_id(mut self, location_id: i64) -> GetCharactersCharacterIdClonesHomeLocation {
    self.location_id = Some(location_id);
    self
  }

  pub fn location_id(&self) -> Option<&i64> {
    self.location_id.as_ref()
  }

  pub fn reset_location_id(&mut self) {
    self.location_id = None;
  }

  pub fn set_location_type(&mut self, location_type: String) {
    self.location_type = Some(location_type);
  }

  pub fn with_location_type(mut self, location_type: String) -> GetCharactersCharacterIdClonesHomeLocation {
    self.location_type = Some(location_type);
    self
  }

  pub fn location_type(&self) -> Option<&String> {
    self.location_type.as_ref()
  }

  pub fn reset_location_type(&mut self) {
    self.location_type = None;
  }

}



