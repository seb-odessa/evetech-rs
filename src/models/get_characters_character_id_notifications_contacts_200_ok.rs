/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCharactersCharacterIdNotificationsContacts200Ok : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCharactersCharacterIdNotificationsContacts200Ok {
  /// message string
  #[serde(rename = "message")]
  message: String,
  /// notification_id integer
  #[serde(rename = "notification_id")]
  notification_id: i32,
  /// send_date string
  #[serde(rename = "send_date")]
  send_date: String,
  /// sender_character_id integer
  #[serde(rename = "sender_character_id")]
  sender_character_id: i32,
  /// A number representing the standing level the receiver has been added at by the sender. The standing levels are as follows: -10 -> Terrible | -5 -> Bad |  0 -> Neutral |  5 -> Good |  10 -> Excellent
  #[serde(rename = "standing_level")]
  standing_level: f32
}

impl GetCharactersCharacterIdNotificationsContacts200Ok {
  /// 200 ok object
  pub fn new(message: String, notification_id: i32, send_date: String, sender_character_id: i32, standing_level: f32) -> GetCharactersCharacterIdNotificationsContacts200Ok {
    GetCharactersCharacterIdNotificationsContacts200Ok {
      message: message,
      notification_id: notification_id,
      send_date: send_date,
      sender_character_id: sender_character_id,
      standing_level: standing_level
    }
  }

  pub fn set_message(&mut self, message: String) {
    self.message = message;
  }

  pub fn with_message(mut self, message: String) -> GetCharactersCharacterIdNotificationsContacts200Ok {
    self.message = message;
    self
  }

  pub fn message(&self) -> &String {
    &self.message
  }


  pub fn set_notification_id(&mut self, notification_id: i32) {
    self.notification_id = notification_id;
  }

  pub fn with_notification_id(mut self, notification_id: i32) -> GetCharactersCharacterIdNotificationsContacts200Ok {
    self.notification_id = notification_id;
    self
  }

  pub fn notification_id(&self) -> &i32 {
    &self.notification_id
  }


  pub fn set_send_date(&mut self, send_date: String) {
    self.send_date = send_date;
  }

  pub fn with_send_date(mut self, send_date: String) -> GetCharactersCharacterIdNotificationsContacts200Ok {
    self.send_date = send_date;
    self
  }

  pub fn send_date(&self) -> &String {
    &self.send_date
  }


  pub fn set_sender_character_id(&mut self, sender_character_id: i32) {
    self.sender_character_id = sender_character_id;
  }

  pub fn with_sender_character_id(mut self, sender_character_id: i32) -> GetCharactersCharacterIdNotificationsContacts200Ok {
    self.sender_character_id = sender_character_id;
    self
  }

  pub fn sender_character_id(&self) -> &i32 {
    &self.sender_character_id
  }


  pub fn set_standing_level(&mut self, standing_level: f32) {
    self.standing_level = standing_level;
  }

  pub fn with_standing_level(mut self, standing_level: f32) -> GetCharactersCharacterIdNotificationsContacts200Ok {
    self.standing_level = standing_level;
    self
  }

  pub fn standing_level(&self) -> &f32 {
    &self.standing_level
  }


}



