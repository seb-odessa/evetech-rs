/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetWarsWarIdAlly : ally object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetWarsWarIdAlly {
  /// Alliance ID if and only if this ally is an alliance
  #[serde(rename = "alliance_id")]
  alliance_id: Option<i32>,
  /// Corporation ID if and only if this ally is a corporation
  #[serde(rename = "corporation_id")]
  corporation_id: Option<i32>
}

impl GetWarsWarIdAlly {
  /// ally object
  pub fn new() -> GetWarsWarIdAlly {
    GetWarsWarIdAlly {
      alliance_id: None,
      corporation_id: None
    }
  }

  pub fn set_alliance_id(&mut self, alliance_id: i32) {
    self.alliance_id = Some(alliance_id);
  }

  pub fn with_alliance_id(mut self, alliance_id: i32) -> GetWarsWarIdAlly {
    self.alliance_id = Some(alliance_id);
    self
  }

  pub fn alliance_id(&self) -> Option<&i32> {
    self.alliance_id.as_ref()
  }

  pub fn reset_alliance_id(&mut self) {
    self.alliance_id = None;
  }

  pub fn set_corporation_id(&mut self, corporation_id: i32) {
    self.corporation_id = Some(corporation_id);
  }

  pub fn with_corporation_id(mut self, corporation_id: i32) -> GetWarsWarIdAlly {
    self.corporation_id = Some(corporation_id);
    self
  }

  pub fn corporation_id(&self) -> Option<&i32> {
    self.corporation_id.as_ref()
  }

  pub fn reset_corporation_id(&mut self) {
    self.corporation_id = None;
  }

}



