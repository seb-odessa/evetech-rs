/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetKillmailsKillmailIdKillmailHashVictim : victim object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetKillmailsKillmailIdKillmailHashVictim {
  /// alliance_id integer
  #[serde(rename = "alliance_id")]
  alliance_id: Option<i32>,
  /// character_id integer
  #[serde(rename = "character_id")]
  character_id: Option<i32>,
  /// corporation_id integer
  #[serde(rename = "corporation_id")]
  corporation_id: Option<i32>,
  /// How much total damage was taken by the victim 
  #[serde(rename = "damage_taken")]
  damage_taken: i32,
  /// faction_id integer
  #[serde(rename = "faction_id")]
  faction_id: Option<i32>,
  /// items array
  #[serde(rename = "items")]
  items: Option<Vec<::models::GetKillmailsKillmailIdKillmailHashItem>>,
  #[serde(rename = "position")]
  position: Option<::models::GetKillmailsKillmailIdKillmailHashPosition>,
  /// The ship that the victim was piloting and was destroyed 
  #[serde(rename = "ship_type_id")]
  ship_type_id: i32
}

impl GetKillmailsKillmailIdKillmailHashVictim {
  /// victim object
  pub fn new(damage_taken: i32, ship_type_id: i32) -> GetKillmailsKillmailIdKillmailHashVictim {
    GetKillmailsKillmailIdKillmailHashVictim {
      alliance_id: None,
      character_id: None,
      corporation_id: None,
      damage_taken: damage_taken,
      faction_id: None,
      items: None,
      position: None,
      ship_type_id: ship_type_id
    }
  }

  pub fn set_alliance_id(&mut self, alliance_id: i32) {
    self.alliance_id = Some(alliance_id);
  }

  pub fn with_alliance_id(mut self, alliance_id: i32) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.alliance_id = Some(alliance_id);
    self
  }

  pub fn alliance_id(&self) -> Option<&i32> {
    self.alliance_id.as_ref()
  }

  pub fn reset_alliance_id(&mut self) {
    self.alliance_id = None;
  }

  pub fn set_character_id(&mut self, character_id: i32) {
    self.character_id = Some(character_id);
  }

  pub fn with_character_id(mut self, character_id: i32) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.character_id = Some(character_id);
    self
  }

  pub fn character_id(&self) -> Option<&i32> {
    self.character_id.as_ref()
  }

  pub fn reset_character_id(&mut self) {
    self.character_id = None;
  }

  pub fn set_corporation_id(&mut self, corporation_id: i32) {
    self.corporation_id = Some(corporation_id);
  }

  pub fn with_corporation_id(mut self, corporation_id: i32) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.corporation_id = Some(corporation_id);
    self
  }

  pub fn corporation_id(&self) -> Option<&i32> {
    self.corporation_id.as_ref()
  }

  pub fn reset_corporation_id(&mut self) {
    self.corporation_id = None;
  }

  pub fn set_damage_taken(&mut self, damage_taken: i32) {
    self.damage_taken = damage_taken;
  }

  pub fn with_damage_taken(mut self, damage_taken: i32) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.damage_taken = damage_taken;
    self
  }

  pub fn damage_taken(&self) -> &i32 {
    &self.damage_taken
  }


  pub fn set_faction_id(&mut self, faction_id: i32) {
    self.faction_id = Some(faction_id);
  }

  pub fn with_faction_id(mut self, faction_id: i32) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.faction_id = Some(faction_id);
    self
  }

  pub fn faction_id(&self) -> Option<&i32> {
    self.faction_id.as_ref()
  }

  pub fn reset_faction_id(&mut self) {
    self.faction_id = None;
  }

  pub fn set_items(&mut self, items: Vec<::models::GetKillmailsKillmailIdKillmailHashItem>) {
    self.items = Some(items);
  }

  pub fn with_items(mut self, items: Vec<::models::GetKillmailsKillmailIdKillmailHashItem>) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.items = Some(items);
    self
  }

  pub fn items(&self) -> Option<&Vec<::models::GetKillmailsKillmailIdKillmailHashItem>> {
    self.items.as_ref()
  }

  pub fn reset_items(&mut self) {
    self.items = None;
  }

  pub fn set_position(&mut self, position: ::models::GetKillmailsKillmailIdKillmailHashPosition) {
    self.position = Some(position);
  }

  pub fn with_position(mut self, position: ::models::GetKillmailsKillmailIdKillmailHashPosition) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.position = Some(position);
    self
  }

  pub fn position(&self) -> Option<&::models::GetKillmailsKillmailIdKillmailHashPosition> {
    self.position.as_ref()
  }

  pub fn reset_position(&mut self) {
    self.position = None;
  }

  pub fn set_ship_type_id(&mut self, ship_type_id: i32) {
    self.ship_type_id = ship_type_id;
  }

  pub fn with_ship_type_id(mut self, ship_type_id: i32) -> GetKillmailsKillmailIdKillmailHashVictim {
    self.ship_type_id = ship_type_id;
    self
  }

  pub fn ship_type_id(&self) -> &i32 {
    &self.ship_type_id
  }


}



