/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetStatusOk : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetStatusOk {
  /// Current online player count
  #[serde(rename = "players")]
  players: i32,
  /// Running version as string
  #[serde(rename = "server_version")]
  server_version: String,
  /// Server start timestamp
  #[serde(rename = "start_time")]
  start_time: String,
  /// If the server is in VIP mode
  #[serde(rename = "vip")]
  vip: Option<bool>
}

impl GetStatusOk {
  /// 200 ok object
  pub fn new(players: i32, server_version: String, start_time: String) -> GetStatusOk {
    GetStatusOk {
      players: players,
      server_version: server_version,
      start_time: start_time,
      vip: None
    }
  }

  pub fn set_players(&mut self, players: i32) {
    self.players = players;
  }

  pub fn with_players(mut self, players: i32) -> GetStatusOk {
    self.players = players;
    self
  }

  pub fn players(&self) -> &i32 {
    &self.players
  }


  pub fn set_server_version(&mut self, server_version: String) {
    self.server_version = server_version;
  }

  pub fn with_server_version(mut self, server_version: String) -> GetStatusOk {
    self.server_version = server_version;
    self
  }

  pub fn server_version(&self) -> &String {
    &self.server_version
  }


  pub fn set_start_time(&mut self, start_time: String) {
    self.start_time = start_time;
  }

  pub fn with_start_time(mut self, start_time: String) -> GetStatusOk {
    self.start_time = start_time;
    self
  }

  pub fn start_time(&self) -> &String {
    &self.start_time
  }


  pub fn set_vip(&mut self, vip: bool) {
    self.vip = Some(vip);
  }

  pub fn with_vip(mut self, vip: bool) -> GetStatusOk {
    self.vip = Some(vip);
    self
  }

  pub fn vip(&self) -> Option<&bool> {
    self.vip.as_ref()
  }

  pub fn reset_vip(&mut self) {
    self.vip = None;
  }

}



