/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetUniverseRaces200Ok : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetUniverseRaces200Ok {
  /// The alliance generally associated with this race
  #[serde(rename = "alliance_id")]
  alliance_id: i32,
  /// description string
  #[serde(rename = "description")]
  description: String,
  /// name string
  #[serde(rename = "name")]
  name: String,
  /// race_id integer
  #[serde(rename = "race_id")]
  race_id: i32
}

impl GetUniverseRaces200Ok {
  /// 200 ok object
  pub fn new(alliance_id: i32, description: String, name: String, race_id: i32) -> GetUniverseRaces200Ok {
    GetUniverseRaces200Ok {
      alliance_id: alliance_id,
      description: description,
      name: name,
      race_id: race_id
    }
  }

  pub fn set_alliance_id(&mut self, alliance_id: i32) {
    self.alliance_id = alliance_id;
  }

  pub fn with_alliance_id(mut self, alliance_id: i32) -> GetUniverseRaces200Ok {
    self.alliance_id = alliance_id;
    self
  }

  pub fn alliance_id(&self) -> &i32 {
    &self.alliance_id
  }


  pub fn set_description(&mut self, description: String) {
    self.description = description;
  }

  pub fn with_description(mut self, description: String) -> GetUniverseRaces200Ok {
    self.description = description;
    self
  }

  pub fn description(&self) -> &String {
    &self.description
  }


  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> GetUniverseRaces200Ok {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_race_id(&mut self, race_id: i32) {
    self.race_id = race_id;
  }

  pub fn with_race_id(mut self, race_id: i32) -> GetUniverseRaces200Ok {
    self.race_id = race_id;
    self
  }

  pub fn race_id(&self) -> &i32 {
    &self.race_id
  }


}



