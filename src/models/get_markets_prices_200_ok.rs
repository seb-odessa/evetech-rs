/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetMarketsPrices200Ok : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetMarketsPrices200Ok {
  /// adjusted_price number
  #[serde(rename = "adjusted_price")]
  adjusted_price: Option<f64>,
  /// average_price number
  #[serde(rename = "average_price")]
  average_price: Option<f64>,
  /// type_id integer
  #[serde(rename = "type_id")]
  type_id: i32
}

impl GetMarketsPrices200Ok {
  /// 200 ok object
  pub fn new(type_id: i32) -> GetMarketsPrices200Ok {
    GetMarketsPrices200Ok {
      adjusted_price: None,
      average_price: None,
      type_id: type_id
    }
  }

  pub fn set_adjusted_price(&mut self, adjusted_price: f64) {
    self.adjusted_price = Some(adjusted_price);
  }

  pub fn with_adjusted_price(mut self, adjusted_price: f64) -> GetMarketsPrices200Ok {
    self.adjusted_price = Some(adjusted_price);
    self
  }

  pub fn adjusted_price(&self) -> Option<&f64> {
    self.adjusted_price.as_ref()
  }

  pub fn reset_adjusted_price(&mut self) {
    self.adjusted_price = None;
  }

  pub fn set_average_price(&mut self, average_price: f64) {
    self.average_price = Some(average_price);
  }

  pub fn with_average_price(mut self, average_price: f64) -> GetMarketsPrices200Ok {
    self.average_price = Some(average_price);
    self
  }

  pub fn average_price(&self) -> Option<&f64> {
    self.average_price.as_ref()
  }

  pub fn reset_average_price(&mut self) {
    self.average_price = None;
  }

  pub fn set_type_id(&mut self, type_id: i32) {
    self.type_id = type_id;
  }

  pub fn with_type_id(mut self, type_id: i32) -> GetMarketsPrices200Ok {
    self.type_id = type_id;
    self
  }

  pub fn type_id(&self) -> &i32 {
    &self.type_id
  }


}



