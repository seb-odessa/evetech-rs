/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCharactersCharacterIdFatigueOk : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCharactersCharacterIdFatigueOk {
  /// Character's jump fatigue expiry
  #[serde(rename = "jump_fatigue_expire_date")]
  jump_fatigue_expire_date: Option<String>,
  /// Character's last jump activation
  #[serde(rename = "last_jump_date")]
  last_jump_date: Option<String>,
  /// Character's last jump update
  #[serde(rename = "last_update_date")]
  last_update_date: Option<String>
}

impl GetCharactersCharacterIdFatigueOk {
  /// 200 ok object
  pub fn new() -> GetCharactersCharacterIdFatigueOk {
    GetCharactersCharacterIdFatigueOk {
      jump_fatigue_expire_date: None,
      last_jump_date: None,
      last_update_date: None
    }
  }

  pub fn set_jump_fatigue_expire_date(&mut self, jump_fatigue_expire_date: String) {
    self.jump_fatigue_expire_date = Some(jump_fatigue_expire_date);
  }

  pub fn with_jump_fatigue_expire_date(mut self, jump_fatigue_expire_date: String) -> GetCharactersCharacterIdFatigueOk {
    self.jump_fatigue_expire_date = Some(jump_fatigue_expire_date);
    self
  }

  pub fn jump_fatigue_expire_date(&self) -> Option<&String> {
    self.jump_fatigue_expire_date.as_ref()
  }

  pub fn reset_jump_fatigue_expire_date(&mut self) {
    self.jump_fatigue_expire_date = None;
  }

  pub fn set_last_jump_date(&mut self, last_jump_date: String) {
    self.last_jump_date = Some(last_jump_date);
  }

  pub fn with_last_jump_date(mut self, last_jump_date: String) -> GetCharactersCharacterIdFatigueOk {
    self.last_jump_date = Some(last_jump_date);
    self
  }

  pub fn last_jump_date(&self) -> Option<&String> {
    self.last_jump_date.as_ref()
  }

  pub fn reset_last_jump_date(&mut self) {
    self.last_jump_date = None;
  }

  pub fn set_last_update_date(&mut self, last_update_date: String) {
    self.last_update_date = Some(last_update_date);
  }

  pub fn with_last_update_date(mut self, last_update_date: String) -> GetCharactersCharacterIdFatigueOk {
    self.last_update_date = Some(last_update_date);
    self
  }

  pub fn last_update_date(&self) -> Option<&String> {
    self.last_update_date.as_ref()
  }

  pub fn reset_last_update_date(&mut self) {
    self.last_update_date = None;
  }

}



