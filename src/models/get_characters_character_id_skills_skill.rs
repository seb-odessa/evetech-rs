/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCharactersCharacterIdSkillsSkill : skill object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCharactersCharacterIdSkillsSkill {
  /// active_skill_level integer
  #[serde(rename = "active_skill_level")]
  active_skill_level: i32,
  /// skill_id integer
  #[serde(rename = "skill_id")]
  skill_id: i32,
  /// skillpoints_in_skill integer
  #[serde(rename = "skillpoints_in_skill")]
  skillpoints_in_skill: i64,
  /// trained_skill_level integer
  #[serde(rename = "trained_skill_level")]
  trained_skill_level: i32
}

impl GetCharactersCharacterIdSkillsSkill {
  /// skill object
  pub fn new(active_skill_level: i32, skill_id: i32, skillpoints_in_skill: i64, trained_skill_level: i32) -> GetCharactersCharacterIdSkillsSkill {
    GetCharactersCharacterIdSkillsSkill {
      active_skill_level: active_skill_level,
      skill_id: skill_id,
      skillpoints_in_skill: skillpoints_in_skill,
      trained_skill_level: trained_skill_level
    }
  }

  pub fn set_active_skill_level(&mut self, active_skill_level: i32) {
    self.active_skill_level = active_skill_level;
  }

  pub fn with_active_skill_level(mut self, active_skill_level: i32) -> GetCharactersCharacterIdSkillsSkill {
    self.active_skill_level = active_skill_level;
    self
  }

  pub fn active_skill_level(&self) -> &i32 {
    &self.active_skill_level
  }


  pub fn set_skill_id(&mut self, skill_id: i32) {
    self.skill_id = skill_id;
  }

  pub fn with_skill_id(mut self, skill_id: i32) -> GetCharactersCharacterIdSkillsSkill {
    self.skill_id = skill_id;
    self
  }

  pub fn skill_id(&self) -> &i32 {
    &self.skill_id
  }


  pub fn set_skillpoints_in_skill(&mut self, skillpoints_in_skill: i64) {
    self.skillpoints_in_skill = skillpoints_in_skill;
  }

  pub fn with_skillpoints_in_skill(mut self, skillpoints_in_skill: i64) -> GetCharactersCharacterIdSkillsSkill {
    self.skillpoints_in_skill = skillpoints_in_skill;
    self
  }

  pub fn skillpoints_in_skill(&self) -> &i64 {
    &self.skillpoints_in_skill
  }


  pub fn set_trained_skill_level(&mut self, trained_skill_level: i32) {
    self.trained_skill_level = trained_skill_level;
  }

  pub fn with_trained_skill_level(mut self, trained_skill_level: i32) -> GetCharactersCharacterIdSkillsSkill {
    self.trained_skill_level = trained_skill_level;
    self
  }

  pub fn trained_skill_level(&self) -> &i32 {
    &self.trained_skill_level
  }


}



