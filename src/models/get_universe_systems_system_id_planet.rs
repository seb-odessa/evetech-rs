/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetUniverseSystemsSystemIdPlanet : planet object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetUniverseSystemsSystemIdPlanet {
  /// asteroid_belts array
  #[serde(rename = "asteroid_belts")]
  asteroid_belts: Option<Vec<i32>>,
  /// moons array
  #[serde(rename = "moons")]
  moons: Option<Vec<i32>>,
  /// planet_id integer
  #[serde(rename = "planet_id")]
  planet_id: i32
}

impl GetUniverseSystemsSystemIdPlanet {
  /// planet object
  pub fn new(planet_id: i32) -> GetUniverseSystemsSystemIdPlanet {
    GetUniverseSystemsSystemIdPlanet {
      asteroid_belts: None,
      moons: None,
      planet_id: planet_id
    }
  }

  pub fn set_asteroid_belts(&mut self, asteroid_belts: Vec<i32>) {
    self.asteroid_belts = Some(asteroid_belts);
  }

  pub fn with_asteroid_belts(mut self, asteroid_belts: Vec<i32>) -> GetUniverseSystemsSystemIdPlanet {
    self.asteroid_belts = Some(asteroid_belts);
    self
  }

  pub fn asteroid_belts(&self) -> Option<&Vec<i32>> {
    self.asteroid_belts.as_ref()
  }

  pub fn reset_asteroid_belts(&mut self) {
    self.asteroid_belts = None;
  }

  pub fn set_moons(&mut self, moons: Vec<i32>) {
    self.moons = Some(moons);
  }

  pub fn with_moons(mut self, moons: Vec<i32>) -> GetUniverseSystemsSystemIdPlanet {
    self.moons = Some(moons);
    self
  }

  pub fn moons(&self) -> Option<&Vec<i32>> {
    self.moons.as_ref()
  }

  pub fn reset_moons(&mut self) {
    self.moons = None;
  }

  pub fn set_planet_id(&mut self, planet_id: i32) {
    self.planet_id = planet_id;
  }

  pub fn with_planet_id(mut self, planet_id: i32) -> GetUniverseSystemsSystemIdPlanet {
    self.planet_id = planet_id;
    self
  }

  pub fn planet_id(&self) -> &i32 {
    &self.planet_id
  }


}



