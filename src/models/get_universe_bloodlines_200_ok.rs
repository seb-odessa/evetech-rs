/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetUniverseBloodlines200Ok : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetUniverseBloodlines200Ok {
  /// bloodline_id integer
  #[serde(rename = "bloodline_id")]
  bloodline_id: i32,
  /// charisma integer
  #[serde(rename = "charisma")]
  charisma: i32,
  /// corporation_id integer
  #[serde(rename = "corporation_id")]
  corporation_id: i32,
  /// description string
  #[serde(rename = "description")]
  description: String,
  /// intelligence integer
  #[serde(rename = "intelligence")]
  intelligence: i32,
  /// memory integer
  #[serde(rename = "memory")]
  memory: i32,
  /// name string
  #[serde(rename = "name")]
  name: String,
  /// perception integer
  #[serde(rename = "perception")]
  perception: i32,
  /// race_id integer
  #[serde(rename = "race_id")]
  race_id: i32,
  /// ship_type_id integer
  #[serde(rename = "ship_type_id")]
  ship_type_id: i32,
  /// willpower integer
  #[serde(rename = "willpower")]
  willpower: i32
}

impl GetUniverseBloodlines200Ok {
  /// 200 ok object
  pub fn new(bloodline_id: i32, charisma: i32, corporation_id: i32, description: String, intelligence: i32, memory: i32, name: String, perception: i32, race_id: i32, ship_type_id: i32, willpower: i32) -> GetUniverseBloodlines200Ok {
    GetUniverseBloodlines200Ok {
      bloodline_id: bloodline_id,
      charisma: charisma,
      corporation_id: corporation_id,
      description: description,
      intelligence: intelligence,
      memory: memory,
      name: name,
      perception: perception,
      race_id: race_id,
      ship_type_id: ship_type_id,
      willpower: willpower
    }
  }

  pub fn set_bloodline_id(&mut self, bloodline_id: i32) {
    self.bloodline_id = bloodline_id;
  }

  pub fn with_bloodline_id(mut self, bloodline_id: i32) -> GetUniverseBloodlines200Ok {
    self.bloodline_id = bloodline_id;
    self
  }

  pub fn bloodline_id(&self) -> &i32 {
    &self.bloodline_id
  }


  pub fn set_charisma(&mut self, charisma: i32) {
    self.charisma = charisma;
  }

  pub fn with_charisma(mut self, charisma: i32) -> GetUniverseBloodlines200Ok {
    self.charisma = charisma;
    self
  }

  pub fn charisma(&self) -> &i32 {
    &self.charisma
  }


  pub fn set_corporation_id(&mut self, corporation_id: i32) {
    self.corporation_id = corporation_id;
  }

  pub fn with_corporation_id(mut self, corporation_id: i32) -> GetUniverseBloodlines200Ok {
    self.corporation_id = corporation_id;
    self
  }

  pub fn corporation_id(&self) -> &i32 {
    &self.corporation_id
  }


  pub fn set_description(&mut self, description: String) {
    self.description = description;
  }

  pub fn with_description(mut self, description: String) -> GetUniverseBloodlines200Ok {
    self.description = description;
    self
  }

  pub fn description(&self) -> &String {
    &self.description
  }


  pub fn set_intelligence(&mut self, intelligence: i32) {
    self.intelligence = intelligence;
  }

  pub fn with_intelligence(mut self, intelligence: i32) -> GetUniverseBloodlines200Ok {
    self.intelligence = intelligence;
    self
  }

  pub fn intelligence(&self) -> &i32 {
    &self.intelligence
  }


  pub fn set_memory(&mut self, memory: i32) {
    self.memory = memory;
  }

  pub fn with_memory(mut self, memory: i32) -> GetUniverseBloodlines200Ok {
    self.memory = memory;
    self
  }

  pub fn memory(&self) -> &i32 {
    &self.memory
  }


  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> GetUniverseBloodlines200Ok {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_perception(&mut self, perception: i32) {
    self.perception = perception;
  }

  pub fn with_perception(mut self, perception: i32) -> GetUniverseBloodlines200Ok {
    self.perception = perception;
    self
  }

  pub fn perception(&self) -> &i32 {
    &self.perception
  }


  pub fn set_race_id(&mut self, race_id: i32) {
    self.race_id = race_id;
  }

  pub fn with_race_id(mut self, race_id: i32) -> GetUniverseBloodlines200Ok {
    self.race_id = race_id;
    self
  }

  pub fn race_id(&self) -> &i32 {
    &self.race_id
  }


  pub fn set_ship_type_id(&mut self, ship_type_id: i32) {
    self.ship_type_id = ship_type_id;
  }

  pub fn with_ship_type_id(mut self, ship_type_id: i32) -> GetUniverseBloodlines200Ok {
    self.ship_type_id = ship_type_id;
    self
  }

  pub fn ship_type_id(&self) -> &i32 {
    &self.ship_type_id
  }


  pub fn set_willpower(&mut self, willpower: i32) {
    self.willpower = willpower;
  }

  pub fn with_willpower(mut self, willpower: i32) -> GetUniverseBloodlines200Ok {
    self.willpower = willpower;
    self
  }

  pub fn willpower(&self) -> &i32 {
    &self.willpower
  }


}



