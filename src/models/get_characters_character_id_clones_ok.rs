/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCharactersCharacterIdClonesOk : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCharactersCharacterIdClonesOk {
  #[serde(rename = "home_location")]
  home_location: Option<::models::GetCharactersCharacterIdClonesHomeLocation>,
  /// jump_clones array
  #[serde(rename = "jump_clones")]
  jump_clones: Vec<::models::GetCharactersCharacterIdClonesJumpClone>,
  /// last_clone_jump_date string
  #[serde(rename = "last_clone_jump_date")]
  last_clone_jump_date: Option<String>,
  /// last_station_change_date string
  #[serde(rename = "last_station_change_date")]
  last_station_change_date: Option<String>
}

impl GetCharactersCharacterIdClonesOk {
  /// 200 ok object
  pub fn new(jump_clones: Vec<::models::GetCharactersCharacterIdClonesJumpClone>) -> GetCharactersCharacterIdClonesOk {
    GetCharactersCharacterIdClonesOk {
      home_location: None,
      jump_clones: jump_clones,
      last_clone_jump_date: None,
      last_station_change_date: None
    }
  }

  pub fn set_home_location(&mut self, home_location: ::models::GetCharactersCharacterIdClonesHomeLocation) {
    self.home_location = Some(home_location);
  }

  pub fn with_home_location(mut self, home_location: ::models::GetCharactersCharacterIdClonesHomeLocation) -> GetCharactersCharacterIdClonesOk {
    self.home_location = Some(home_location);
    self
  }

  pub fn home_location(&self) -> Option<&::models::GetCharactersCharacterIdClonesHomeLocation> {
    self.home_location.as_ref()
  }

  pub fn reset_home_location(&mut self) {
    self.home_location = None;
  }

  pub fn set_jump_clones(&mut self, jump_clones: Vec<::models::GetCharactersCharacterIdClonesJumpClone>) {
    self.jump_clones = jump_clones;
  }

  pub fn with_jump_clones(mut self, jump_clones: Vec<::models::GetCharactersCharacterIdClonesJumpClone>) -> GetCharactersCharacterIdClonesOk {
    self.jump_clones = jump_clones;
    self
  }

  pub fn jump_clones(&self) -> &Vec<::models::GetCharactersCharacterIdClonesJumpClone> {
    &self.jump_clones
  }


  pub fn set_last_clone_jump_date(&mut self, last_clone_jump_date: String) {
    self.last_clone_jump_date = Some(last_clone_jump_date);
  }

  pub fn with_last_clone_jump_date(mut self, last_clone_jump_date: String) -> GetCharactersCharacterIdClonesOk {
    self.last_clone_jump_date = Some(last_clone_jump_date);
    self
  }

  pub fn last_clone_jump_date(&self) -> Option<&String> {
    self.last_clone_jump_date.as_ref()
  }

  pub fn reset_last_clone_jump_date(&mut self) {
    self.last_clone_jump_date = None;
  }

  pub fn set_last_station_change_date(&mut self, last_station_change_date: String) {
    self.last_station_change_date = Some(last_station_change_date);
  }

  pub fn with_last_station_change_date(mut self, last_station_change_date: String) -> GetCharactersCharacterIdClonesOk {
    self.last_station_change_date = Some(last_station_change_date);
    self
  }

  pub fn last_station_change_date(&self) -> Option<&String> {
    self.last_station_change_date.as_ref()
  }

  pub fn reset_last_station_change_date(&mut self) {
    self.last_station_change_date = None;
  }

}



