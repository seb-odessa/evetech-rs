/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// GetCharactersCharacterIdPlanets200Ok : 200 ok object

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct GetCharactersCharacterIdPlanets200Ok {
  /// last_update string
  #[serde(rename = "last_update")]
  last_update: String,
  /// num_pins integer
  #[serde(rename = "num_pins")]
  num_pins: i32,
  /// owner_id integer
  #[serde(rename = "owner_id")]
  owner_id: i32,
  /// planet_id integer
  #[serde(rename = "planet_id")]
  planet_id: i32,
  /// planet_type string
  #[serde(rename = "planet_type")]
  planet_type: String,
  /// solar_system_id integer
  #[serde(rename = "solar_system_id")]
  solar_system_id: i32,
  /// upgrade_level integer
  #[serde(rename = "upgrade_level")]
  upgrade_level: i32
}

impl GetCharactersCharacterIdPlanets200Ok {
  /// 200 ok object
  pub fn new(last_update: String, num_pins: i32, owner_id: i32, planet_id: i32, planet_type: String, solar_system_id: i32, upgrade_level: i32) -> GetCharactersCharacterIdPlanets200Ok {
    GetCharactersCharacterIdPlanets200Ok {
      last_update: last_update,
      num_pins: num_pins,
      owner_id: owner_id,
      planet_id: planet_id,
      planet_type: planet_type,
      solar_system_id: solar_system_id,
      upgrade_level: upgrade_level
    }
  }

  pub fn set_last_update(&mut self, last_update: String) {
    self.last_update = last_update;
  }

  pub fn with_last_update(mut self, last_update: String) -> GetCharactersCharacterIdPlanets200Ok {
    self.last_update = last_update;
    self
  }

  pub fn last_update(&self) -> &String {
    &self.last_update
  }


  pub fn set_num_pins(&mut self, num_pins: i32) {
    self.num_pins = num_pins;
  }

  pub fn with_num_pins(mut self, num_pins: i32) -> GetCharactersCharacterIdPlanets200Ok {
    self.num_pins = num_pins;
    self
  }

  pub fn num_pins(&self) -> &i32 {
    &self.num_pins
  }


  pub fn set_owner_id(&mut self, owner_id: i32) {
    self.owner_id = owner_id;
  }

  pub fn with_owner_id(mut self, owner_id: i32) -> GetCharactersCharacterIdPlanets200Ok {
    self.owner_id = owner_id;
    self
  }

  pub fn owner_id(&self) -> &i32 {
    &self.owner_id
  }


  pub fn set_planet_id(&mut self, planet_id: i32) {
    self.planet_id = planet_id;
  }

  pub fn with_planet_id(mut self, planet_id: i32) -> GetCharactersCharacterIdPlanets200Ok {
    self.planet_id = planet_id;
    self
  }

  pub fn planet_id(&self) -> &i32 {
    &self.planet_id
  }


  pub fn set_planet_type(&mut self, planet_type: String) {
    self.planet_type = planet_type;
  }

  pub fn with_planet_type(mut self, planet_type: String) -> GetCharactersCharacterIdPlanets200Ok {
    self.planet_type = planet_type;
    self
  }

  pub fn planet_type(&self) -> &String {
    &self.planet_type
  }


  pub fn set_solar_system_id(&mut self, solar_system_id: i32) {
    self.solar_system_id = solar_system_id;
  }

  pub fn with_solar_system_id(mut self, solar_system_id: i32) -> GetCharactersCharacterIdPlanets200Ok {
    self.solar_system_id = solar_system_id;
    self
  }

  pub fn solar_system_id(&self) -> &i32 {
    &self.solar_system_id
  }


  pub fn set_upgrade_level(&mut self, upgrade_level: i32) {
    self.upgrade_level = upgrade_level;
  }

  pub fn with_upgrade_level(mut self, upgrade_level: i32) -> GetCharactersCharacterIdPlanets200Ok {
    self.upgrade_level = upgrade_level;
    self
  }

  pub fn upgrade_level(&self) -> &i32 {
    &self.upgrade_level
  }


}



